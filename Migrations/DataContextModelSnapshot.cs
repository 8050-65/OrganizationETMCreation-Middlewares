// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace OrganizationETMCreation.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrganizationETMCreation.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportsTo")
                        .HasColumnType("text");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalHoursWorked")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWorkload")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Member", b =>
                {
                    b.Property<int>("memberid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("memberid"));

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("memberid");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("integer");

                    b.Property<string>("memberrole")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.TeamManager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("TeamManagerid")
                        .HasColumnType("integer");

                    b.Property<int?>("memberid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("TeamManagerid");

                    b.HasIndex("memberid");

                    b.ToTable("teammanagers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("memberid")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ReportsTo")
                        .HasColumnType("text");

                    b.Property<int>("TotalHoursWorked")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWorkload")
                        .HasColumnType("integer");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("integer");

                    b.Property<string>("memberrole")
                        .HasColumnType("text");

                    b.HasKey("TeamId", "memberid");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MemberId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Employee", b =>
                {
                    b.HasOne("OrganizationETMCreation.Models.Team", null)
                        .WithMany("Employees")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.TeamManager", b =>
                {
                    b.HasOne("OrganizationETMCreation.Models.TeamManager", null)
                        .WithMany("TeamManagers")
                        .HasForeignKey("TeamManagerid");

                    b.HasOne("OrganizationETMCreation.Models.Member", null)
                        .WithMany("TeamManagers")
                        .HasForeignKey("memberid");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.TeamMember", b =>
                {
                    b.HasOne("OrganizationETMCreation.Models.Employee", "Employee")
                        .WithMany("TeamMembers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizationETMCreation.Models.Member", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrganizationETMCreation.Models.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Employee", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Member", b =>
                {
                    b.Navigation("TeamManagers");

                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.Team", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("OrganizationETMCreation.Models.TeamManager", b =>
                {
                    b.Navigation("TeamManagers");
                });
#pragma warning restore 612, 618
        }
    }
}
